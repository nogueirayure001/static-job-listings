{"ast":null,"code":"var _jsxFileName = \"/home/oem/Projetos/Front-End Mentor/static-job-listings/static-job-listings/src/App.js\";\nimport React, { Component } from \"react\";\nimport Filterbox from \"./components/Filterbox/Filterbox.component\";\nimport AllListings from \"./components/AllListings/AllListings.component\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor() {\n    var _this;\n\n    super();\n    _this = this;\n\n    this.updateFilters = function () {\n      let removed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      let added = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n      if (removed) {\n        const newActiveFilters = _this.state.activeFilters.filter(filter => {\n          if (filter === removed) {\n            return false;\n          }\n\n          return true;\n        });\n\n        _this.setState(prevState => {\n          return {\n            activeFilters: newActiveFilters\n          };\n        });\n      }\n\n      if (added) {\n        if (_this.state.activeFilters.includes(added)) {\n          return;\n        }\n\n        _this.setState(prevState => ({\n          activeFilters: [...prevState.activeFilters, added]\n        }));\n      }\n    };\n\n    this.state = {\n      listings: [],\n      activeFilters: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"./data/data.json\").then(response => response.json()).then(listings => this.setState({\n      listings: listings\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }, \"Static Job Listings Site\")), /*#__PURE__*/React.createElement(\"main\", {\n      className: \"App-main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, this.state.activeFilters.length > 0 ? /*#__PURE__*/React.createElement(Filterbox, {\n      activeFilters: this.state.activeFilters,\n      updateFilters: this.updateFilters,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }) : null, /*#__PURE__*/React.createElement(AllListings, {\n      listings: this.state.listings,\n      activeFilters: this.state.activeFilters,\n      updateFilters: this.updateFilters,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/oem/Projetos/Front-End Mentor/static-job-listings/static-job-listings/src/App.js"],"names":["React","Component","Filterbox","AllListings","App","constructor","updateFilters","removed","added","newActiveFilters","state","activeFilters","filter","setState","prevState","includes","listings","componentDidMount","fetch","then","response","json","render","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,4CAAtB;AACA,OAAOC,WAAP,MAAwB,gDAAxB;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAC1BI,EAAAA,WAAW,GAAG;AAAA;;AACZ,WADY;AAAA;;AAAA,SAedC,aAfc,GAeE,YAAkC;AAAA,UAAjCC,OAAiC,uEAAvB,IAAuB;AAAA,UAAjBC,KAAiB,uEAAT,IAAS;;AAChD,UAAID,OAAJ,EAAa;AACX,cAAME,gBAAgB,GAAG,KAAI,CAACC,KAAL,CAAWC,aAAX,CAAyBC,MAAzB,CAAiCA,MAAD,IAAY;AACnE,cAAIA,MAAM,KAAKL,OAAf,EAAwB;AACtB,mBAAO,KAAP;AACD;;AACD,iBAAO,IAAP;AACD,SALwB,CAAzB;;AAOA,QAAA,KAAI,CAACM,QAAL,CAAeC,SAAD,IAAe;AAC3B,iBAAO;AAAEH,YAAAA,aAAa,EAAEF;AAAjB,WAAP;AACD,SAFD;AAGD;;AAED,UAAID,KAAJ,EAAW;AACT,YAAI,KAAI,CAACE,KAAL,CAAWC,aAAX,CAAyBI,QAAzB,CAAkCP,KAAlC,CAAJ,EAA8C;AAC5C;AACD;;AAED,QAAA,KAAI,CAACK,QAAL,CAAeC,SAAD,KAAgB;AAC5BH,UAAAA,aAAa,EAAE,CAAC,GAAGG,SAAS,CAACH,aAAd,EAA6BH,KAA7B;AADa,SAAhB,CAAd;AAGD;AACF,KAtCa;;AAGZ,SAAKE,KAAL,GAAa;AACXM,MAAAA,QAAQ,EAAE,EADC;AAEXL,MAAAA,aAAa,EAAE;AAFJ,KAAb;AAID;;AAEDM,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,kBAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESH,QAAD,IAAc,KAAKH,QAAL,CAAc;AAAEG,MAAAA,QAAQ,EAAEA;AAAZ,KAAd,CAFtB;AAGD;;AA2BDM,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADF,CADF,eAKE;AAAM,MAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKZ,KAAL,CAAWC,aAAX,CAAyBY,MAAzB,GAAkC,CAAlC,gBACC,oBAAC,SAAD;AACE,MAAA,aAAa,EAAE,KAAKb,KAAL,CAAWC,aAD5B;AAEE,MAAA,aAAa,EAAE,KAAKL,aAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,GAKG,IANN,eAQE,oBAAC,WAAD;AACE,MAAA,QAAQ,EAAE,KAAKI,KAAL,CAAWM,QADvB;AAEE,MAAA,aAAa,EAAE,KAAKN,KAAL,CAAWC,aAF5B;AAGE,MAAA,aAAa,EAAE,KAAKL,aAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CALF,CADF;AAsBD;;AAhEyB;;AAmE5B,eAAeF,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Filterbox from \"./components/Filterbox/Filterbox.component\";\nimport AllListings from \"./components/AllListings/AllListings.component\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      listings: [],\n      activeFilters: [],\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"./data/data.json\")\n      .then((response) => response.json())\n      .then((listings) => this.setState({ listings: listings }));\n  }\n\n  updateFilters = (removed = null, added = null) => {\n    if (removed) {\n      const newActiveFilters = this.state.activeFilters.filter((filter) => {\n        if (filter === removed) {\n          return false;\n        }\n        return true;\n      });\n\n      this.setState((prevState) => {\n        return { activeFilters: newActiveFilters };\n      });\n    }\n\n    if (added) {\n      if (this.state.activeFilters.includes(added)) {\n        return;\n      }\n\n      this.setState((prevState) => ({\n        activeFilters: [...prevState.activeFilters, added],\n      }));\n    }\n  };\n\n  render() {\n    return (\n      <div className='App'>\n        <header className='App-header'>\n          <h1>Static Job Listings Site</h1>\n        </header>\n\n        <main className='App-main'>\n          {this.state.activeFilters.length > 0 ? (\n            <Filterbox\n              activeFilters={this.state.activeFilters}\n              updateFilters={this.updateFilters}\n            />\n          ) : null}\n\n          <AllListings\n            listings={this.state.listings}\n            activeFilters={this.state.activeFilters}\n            updateFilters={this.updateFilters}\n          />\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}